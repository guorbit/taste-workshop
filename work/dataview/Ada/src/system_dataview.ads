pragma Style_Checks (Off);
--  Code automatically generated by asn1scc tool
with adaasn1rtl;


pragma Warnings (Off, "unit ""System"" is not referenced");
with System;
pragma Warnings (On, "unit ""System"" is not referenced");

pragma Warnings (Off, "use clause for package ""adaasn1rtl"" has no effect");
use adaasn1rtl;
pragma Warnings (On, "use clause for package ""adaasn1rtl"" has no effect");

pragma Warnings (Off, "use clause for type");
pragma Warnings (Off, "is already use-visible through package use clause at line");
use type adaasn1rtl.OctetBuffer;
use type adaasn1rtl.BitArray;
use type adaasn1rtl.Asn1UInt;
use type adaasn1rtl.Asn1Int;
use type adaasn1rtl.BIT;
pragma Warnings (On, "use clause for type");
pragma Warnings (On, "is already use-visible through package use clause at line");



package System_Dataview with SPARK_Mode
is


subtype asn1SccPID_index_range is Integer range 0..3;
type asn1SccPID is (asn1Sccgnc_controller, asn1Sccparachute_deployer, asn1Scctmtc_handler, asn1Sccenv) with Size => adaasn1rtl.Enumerated_Size;
for asn1SccPID use
    (asn1Sccgnc_controller => 0, asn1Sccparachute_deployer => 1, asn1Scctmtc_handler => 2, asn1Sccenv => 3);

function asn1SccPID_Equal(val1, val2 : asn1SccPID) return Boolean;

ERR_PID:constant Integer := 51; -- gnc-controller | parachute-deployer | tmtc-handler | env
function asn1SccPID_IsConstraintValid(val : asn1SccPID) return adaasn1rtl.ASN1_RESULT;

function asn1SccPID_Init return asn1SccPID;
pragma Warnings (Off, "there are no others");
 
pragma Warnings (On, "there are no others");
private
   --# hide System_Dataview;


end System_Dataview;